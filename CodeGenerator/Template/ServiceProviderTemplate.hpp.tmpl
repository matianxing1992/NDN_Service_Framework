#ifndef EXAMPLE_SERVICE_PROVIDER_{{AppName}}_HPP
#define EXAMPLE_SERVICE_PROVIDER_{{AppName}}_HPP

#include <ndn-service-framework/ServiceProvider.hpp>
{% for ServiceName in ServiceNameArray %}
#include "./{{ServiceName}}Service.hpp"
{% endfor %}


namespace {{NameSpace}}
{
    class ServiceProvider_{{AppName}} : public ndn_service_framework::ServiceProvider
    {
    public:
        ServiceProvider_{{AppName}}(ndn::Face& face, ndn::Name group_prefix, ndn::security::Certificate identityCert,ndn::security::Certificate attrAuthorityCertificate, std::string trustSchemaPath);
        virtual ~ServiceProvider_{{AppName}}();

    protected:

        void ConsumeRequest(const ndn::Name& RequesterName,const ndn::Name& providerName,const ndn::Name& ServiceName,const ndn::Name& FunctionName, const ndn::Name& RequestID, ndn_service_framework::RequestMessage& requestMessage) override;


    public:
        {% for ServiceName in ServiceNameArray %}
        {{NameSpace}}::{{ServiceName}}Service m_{{ServiceName}}Service;
        {% endfor %}
    };
}

#endif